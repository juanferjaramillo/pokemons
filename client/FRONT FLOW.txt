index.js
Configura BrowserRouter, store de Redux y renderia <App />

App.js
Configura Routes con cada path: cual componente renderizar en cada path.  Inicialmente renderiza SplashPage que se muestra en "/".

<SplashPage />
Hace dispatch de getAllPks() al cargar, para solicitar al back 60 pokemones y guardarlos en el store.
Solicita adem√°s al back traer los types de la API y guardarlos en BD.
Renderiza <Welcome />

<Welcome />
Muestra un boton de ingreso y espera para renderizar <BoardPage />

<BoardPage />
Hace dispatch de dispAllPk() al cargar para copiar los 60 pokemones a cardsFiltered en el store.
Renderiza <NavBar />, <ActionBar />, <Board /> <FooterBar />

<Board />
Trae la pagina actual a una variable y trae cardsFiltered desde el store a un array.  Extrae los 12 pokemones que corresponden a la pagina en el mismo array.
Renderza <Card /> haciendo map al array.

<FooterBar />
Trae la pagina actual del store a una variable.
Hace dispatch de increaseBoardPage() y decreaseBoardPage() para modificar la pagina actual en el sotre.
Este cambio del state genera un re-renderizado de <Board />

<ActionBar />
Filtros: hace dispatch de filterTypeCards y filerOriginCards con el event.taget.value que hacen filter del cardsOnGame y lo guarda en cardsFiltered y vuelven a la pagina 1 => re-renderiza <Board />
Orden: hace dispatch de orderByName y orderByAttack con 'des' o 'asc' que hace un sort con los contenidos de cardsFiltered y vuelve a la pagina 1 => re-renderiza <Board />

<NavBar />
Create: Renderiza <CreatePage /> que renderiza <NavBar /> y <CreateForm />.
<CreateForm /> muestra el formulario y valida con la funcion 'validate', con cada cambio de su estado local, y actualiza el estado de rrores.
OnSubmit: si no hay errores hace dispatch de postPokemon enviando los types en u array de integers para guardarlos en la BD.  Esto devuelve los tipos de string, con su name.
Guarda el pokemon en el store cambiando sus types por los strings de sus names.  Los adiciona a cardsOnBoard y cardsFiltered.

<DetailPage /> 
El boton back navega a la ruta "/Board"  que renderiza el board con cardsFiltered para mostrar las cards que se mostraban previamente.